import { BaseApi, RetrieveOptions, RetrievePathOptions, SourceDeployResult, MetadataDeployOptions, SourceRetrieveResult } from './types';
import { SourceComponent } from '../metadata-registry';
import { SourcePath } from '../common';
export declare const DEFAULT_API_OPTIONS: {
    rollbackOnError: boolean;
    ignoreWarnings: boolean;
    checkOnly: boolean;
    singlePackage: boolean;
};
export declare class MetadataApi extends BaseApi {
    deploy(components: SourceComponent | SourceComponent[], options?: MetadataDeployOptions): Promise<SourceDeployResult>;
    deployWithPaths(paths: SourcePath, options?: MetadataDeployOptions): Promise<SourceDeployResult>;
    retrieveWithPaths(options: RetrievePathOptions): Promise<SourceRetrieveResult>;
    retrieve(options: RetrieveOptions): Promise<SourceRetrieveResult>;
    private formatRetrieveRequest;
    private getRetrievedResult;
    private metadataRetrieveStatusPoll;
    private buildSourceRetrieveResult;
    private getConvertedComponents;
    private metadataDeployID;
    private metadataDeployStatusPoll;
    private buildSourceDeployResult;
    private getDeployMessages;
    /**
     * Fix any issues with the deploy message returned by the api.
     * TODO: remove as fixes are made in the api.
     */
    private sanitizeDeployMessage;
}
