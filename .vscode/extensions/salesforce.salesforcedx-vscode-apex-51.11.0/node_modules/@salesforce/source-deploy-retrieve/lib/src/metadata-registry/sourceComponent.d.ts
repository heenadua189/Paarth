import { TreeContainer, VirtualDirectory } from './types';
import { ForceIgnore } from './forceIgnore';
import { MetadataType, SourcePath, MetadataComponent } from '../common';
import { JsonMap } from '@salesforce/ts-types';
import { SfdxFileFormat } from '../convert';
export declare type ComponentProperties = {
    name: string;
    type: MetadataType;
    xml?: SourcePath;
    content?: SourcePath;
    parent?: SourceComponent;
};
/**
 * Representation of a MetadataComponent in a file tree.
 */
export declare class SourceComponent implements MetadataComponent {
    readonly name: string;
    readonly type: MetadataType;
    readonly xml?: SourcePath;
    readonly parent?: SourceComponent;
    content?: SourcePath;
    private _tree;
    private forceIgnore;
    constructor(props: ComponentProperties, tree?: TreeContainer, forceIgnore?: ForceIgnore);
    static createVirtualComponent(props: ComponentProperties, fs: VirtualDirectory[], forceIgnore?: ForceIgnore): SourceComponent;
    walkContent(): SourcePath[];
    getChildren(): SourceComponent[];
    parseXml(): Promise<JsonMap>;
    getPackageRelativePath(fsPath: SourcePath, format: SfdxFileFormat): SourcePath;
    private getChildrenInternal;
    private walk;
    get fullName(): string;
    get tree(): TreeContainer;
}
